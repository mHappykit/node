const express = require('express');
const cors = require('cors');
const fetch = require('node-fetch');
const cheerio = require('cheerio');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 6060;

// Middleware
app.use(cors());
app.use(express.json());

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
let counter = 0;
let requestCount = 0;

// Middleware –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  requestCount++;
  next();
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
app.post('/increment', (req, res) => {
  counter++;
  res.json({
    success: true,
    message: '–°—á–µ—Ç—á–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω',
    counter: counter
  });
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
app.post('/reset', (req, res) => {
  counter = 0;
  res.json({
    success: true,
    message: '–°—á–µ—Ç—á–∏–∫ –æ–±–Ω—É–ª–µ–Ω',
    counter: counter
  });
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.get('/requests', (req, res) => {
  res.json({
    success: true,
    requestCount: requestCount,
    message: `–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${requestCount}`
  });
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
app.get('/counter', (req, res) => {
  res.json({
    success: true,
    counter: counter,
    message: `–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞: ${counter}`
  });
});

// –ü—Ä–æ–∫—Å–∏-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Pegast API



app.post('/exchange-rates', async (req, res) => {
  try {
    const { date } = req.body;  // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø—Ä–∏–¥—ë—Ç { date: "2025-08-11" } –∏–ª–∏ null

    const pageRes = await fetch('https://agency.pegast.ru/ExchangeRates', {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
        'Accept-Language': 'ru,ru-RU;q=0.9,en;q=0.8',
      }
    });

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—É–∫–∏ –∏–∑ Set-Cookie
    const rawCookies = pageRes.headers.raw()['set-cookie'] || [];
    const cookies = rawCookies.map(c => c.split(';')[0]).join('; ');

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∫ API Pegast, –ø–æ–¥—Å—Ç–∞–≤–ª—è—è –¥–∞—Ç—É –µ—Å–ª–∏ –µ—Å—Ç—å
    const bodyPayload = {
      date: date || null
    };

    // 3) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    const apiRes = await fetch('https://agency.pegast.ru/ExchangeRates/GetExchangeRates', {
      method: 'POST',
      headers: {
        'Accept': '*/*',
        'Accept-Language': 'ru,ru-RU;q=0.9,en;q=0.8',
        'Content-Type': 'application/json; charset=UTF-8',
        'Cookie': cookies,
        'DNT': '1',
        'Origin': 'https://agency.pegast.ru',
        'Referer': 'https://agency.pegast.ru/ExchangeRates',
        'Sec-CH-UA': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
        'Sec-CH-UA-Mobile': '?0',
        'Sec-CH-UA-Platform': '"Windows"',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
        'X-KL-KFA-Ajax-Request': 'Ajax_Request',
        'X-Requested-With': 'XMLHttpRequest',
      },
      body: JSON.stringify(bodyPayload),
    });

    function replaceNewDateWithISOString(str) {
      return str.replace(/new Date\((\d+)\)/g, (_, timestamp) => {
        const date = new Date(Number(timestamp));
        return `"${date.toISOString()}"`;
      });
    }

    let raw = await apiRes.text();

    raw = replaceNewDateWithISOString(raw);
    const data = {
      success: true,
      data: JSON.parse(raw)
    };

    res.json(data);

  } catch (err) {
    console.error(err);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤' });
  }
});

app.get('/vast', (req, res) => {
  const origin = req.headers.origin || '-';
  const referer = req.headers.referer || '-';
  const host = req.headers.host;
  const ip = req.ip;

  // –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log('--- –ó–∞–ø—Ä–æ—Å –Ω–∞ VAST ---');
  console.log('–î–∞—Ç–∞:', new Date().toISOString());
  console.log('IP –∫–ª–∏–µ–Ω—Ç–∞:', ip);
  console.log('–î–æ–º–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (Origin):', origin);
  console.log('–†–µ—Ñ–µ—Ä–µ—Ä (Referer):', referer);
  console.log('–í–∞—à —Å–µ—Ä–≤–µ—Ä (Host):', host);

  // –õ–æ–≥ –≤ —Ñ–∞–π–ª
  const logLine = `${new Date().toISOString()} | IP: ${ip} | Origin: ${origin} | Referer: ${referer}\n`;
  fs.appendFileSync(path.join(__dirname, 'vast_requests.log'), logLine);

  // –û—Ç–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π VAST
  res.setHeader('Content-Type', 'application/xml');
  res.send(`<?xml version="1.0" encoding="UTF-8"?>
<VAST xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="vast.xsd" version="4.2">
    <Ad id="BXkG52XD">
        <InLine>
            <AdTitle>AD mish</AdTitle>
            <Error/>
            <Impression/>
            <Creatives>
                <Creative id="OrVYL9Me">
                    <Linear skipoffset="00:00:05">
                        <Duration>00:01:14.000</Duration>
                        <MediaFiles>
                            <MediaFile delivery="progressive" type="video/avi" width="800" height="450" bitrate="818" scalable="true" maintainAspectRatio="true">
                                <![CDATA[ https://s3-user-b6a1f8-default-bucket.storage.clo.ru/mish/content-avi.avi?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=JBBBDVKX6T3EBNE44A0L/20250327/us-east-1/s3/aws4_request&X-Amz-Date=20250327T084157Z&X-Amz-Expires=604798&X-Amz-SignedHeaders=host&X-Amz-Signature=eb522683c4fb2d4d0bddb4896921d1730963e026e65313dd5d2f5cc5e3952988 ]]>
                            </MediaFile>
                            <MediaFile delivery="progressive" type="video/mp4" width="800" height="450" bitrate="818" scalable="true" maintainAspectRatio="true">
                                <![CDATA[ https://s3-user-b6a1f8-default-bucket.storage.clo.ru/mish/ads.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=JBBBDVKX6T3EBNE44A0L/20250819/default/s3/aws4_request&X-Amz-Date=20250819T091750Z&X-Amz-Expires=604798&X-Amz-SignedHeaders=host&X-Amz-Signature=c45df0b83b412fe2d627ff172c1d06febbb9d757b60576e4b127f799b8bd9fa0]]>
                            </MediaFile>
                        </MediaFiles>
                    </Linear>
                </Creative>
            </Creatives>
        </InLine>
    </Ad>
</VAST>`);
});

app.get("/proxyVast", async (req, res) => {
  const vastUrl = "https://node-1l98.onrender.com/vast";
  const response = await fetch(vastUrl, {
    headers: {
      "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.142.86 Safari/537.36",
      'Referer': 'https://adwebs.pro/',
      'Origin': 'https://adwebs.pro',
    }
  });
  const xml = await response.text();

  res.set("Content-Type", "application/xml");
  res.send(xml);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({
    success: false,
    message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  const now = new Date().toISOString();
  console.log("===========================================");
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω`);
  console.log(`üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${now}`);
  console.log(`üåç –°—Ä–µ–¥–∞: ${process.env.NODE_ENV || "development"}`);
  console.log(`üîå –ü–æ—Ä—Ç: ${PORT}`);
  console.log(`üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
  console.log("üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:");
  console.log("  ‚ûï POST /increment       - —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫");
  console.log("  ‚ôªÔ∏è  POST /reset           - –æ–±–Ω—É–ª–∏—Ç—å —Å—á–µ—Ç—á–∏–∫");
  console.log("  üî¢ GET  /counter         - –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞");
  console.log("  üìä GET  /requests        - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤");
  console.log("  üí± POST /exchange-rates  - –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∫ Pegast API");
  console.log("  üé¨ GET  /vast            - –ø–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π VAST XML");
  console.log("  üé¨ GET  /proxyVast       - –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π VAST XML");
  console.log("===========================================");
});